doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    title PSLvis
    // Include Bootstrap CSS from CDN
    link(href='https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.5.2/css/fontawesome.min.css' rel='stylesheet')
    link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet')
    link(rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200")
    script(src="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.5.2/js/all.min.js")
    script(src="https://cdn.jsdelivr.net/npm/htmx.org@1.9.11/dist/htmx.min.js")
    script(src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.2/Sortable.min.js")
    script(src="https://cdn.jsdelivr.net/npm/chart.js@4.4.2/dist/chart.umd.min.js")
  body
    include pslresult.pug


    .position-fixed.top-50.end-0.translate-middle-y.me-1
      .btn-group-vertical(role="group")
        #reset.btn.btn-outline-secondary(onclick="reset()" style="border-top-right-radius:0;") Reset
        #fill.btn.btn-outline-secondary(onclick="fill()" style="border-bottom-right-radius:0;") Fill
    .position-fixed.top-0.end-0.me-5.mt-5
      p 
        a.link-secondary.link-underline.link-underline-opacity-0(href="https://github.com/TRR318/scikit-psl")
          i.fa-brands.fa-github 
          span= " Algorithm repo"
      p
        a.link-secondary.link-underline.link-underline-opacity-0(href="https://github.com/TRR318/pslvis")
          i.fa-brands.fa-github 
          span= " Visualization repo"

    script.
      function loadStart(){
        document.querySelectorAll("#feature-container .loading").forEach(e => {
          e.classList.add("opacity-25");
          e.style.pointerEvents = "none";
          e.style.userSelect = "none";
        });
        document.querySelectorAll("#feature-container .spinner-border")
          .forEach(e => e.classList.remove("d-none"));
      }

      function reset(){
        loadStart();
        htmx.ajax("GET", "/update-table", {
                    target: "#feature-container",
                    swap: "outerHTML",
                    values: {
                      type: "reset",
                    }
                  });
      }
      function fill(){
        loadStart();
        htmx.ajax("GET", "/update-table", {
                    target: "#feature-container",
                    swap: "outerHTML",
                    values: {
                      type: "fill",
                    }
                  });
      }

      function initialize() {
        document.querySelectorAll("#feature-container ul")
          .forEach(ul => {
            new Sortable(ul, {
              animation:150,
              group: "features",
              ghostClass: "ghost",	
              handle: ".draghandle",
              onEnd: function(evt) {
                if (evt.oldIndex !== evt.newIndex || evt.from.id !== evt.to.id) {
                  // Trigger htmx to send information to the server
                  evt.item.classList.add("ghost")
                  loadStart();
                  htmx.ajax("GET", "/update-table", {
                    target: "#feature-container",
                    swap: "outerHTML",
                    values: {
                      type: "feature",
                      from: evt.oldIndex,
                      to: evt.newIndex,
                      feature: evt.item.dataset.feature,
                      fromList: evt.from.id,
                      toList: evt.to.id,
                    }
                  });
                }
              }
            });
          })
      }

      document.addEventListener('DOMContentLoaded', initialize);
      document.body.addEventListener('htmx:afterSwap', initialize);
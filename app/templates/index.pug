{% load static %}

doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    title PSLvis
    // Include Bootstrap CSS from CDN
    link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet')
    link(href="https://cdn.jsdelivr.net/npm/@mdi/font@7.4.47/css/materialdesignicons.min.css" rel="stylesheet") 
    script(src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous")
    script(src="https://cdn.jsdelivr.net/npm/htmx.org@1.9.11/dist/htmx.min.js")
    script(src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.2/Sortable.min.js")
    script(src="https://cdn.jsdelivr.net/npm/chart.js@4.4.2/dist/chart.umd.min.js")
    script(src="https://cdn.jsdelivr.net/npm/mermaid@10.9.1/dist/mermaid.min.js")
  body
    if standalone
      header.navbar.navbar-expand-lg.sticky-top.bg-success-subtle
        nav.container-xxl.flex-wrap.flex-lg-nowrap 
          ul.nav 
            li.nav-item 
              h1 PSLvis
          ul.nav
            li.nav-item
              a.link-secondary.link-underline.link-underline-opacity-0(href="https://github.com/TRR318/scikit-psl")
                span.mdi.mdi-github.fs-4.btn.btn-sm
                span Algorithm
            li.nav-item
              a.link-secondary.link-underline.link-underline-opacity-0(href="https://github.com/TRR318/pslvis")
                span.mdi.mdi-github.fs-4.btn.btn-sm
                span Visualization

    //#models.offcanvas.offcanvas-end(tabindex="-1")
      include models.pug

    .container.mt-5
      .row
        .col-sm-6.col-lg-4
          h4 Interactive PSL
          if experiment_params.incremental_model == 1
            p Merkmale können durch verschieben zum Modell hinzufügen und die Reihenfolge ändern.
            p Die Grafik in der rechten oberen Ecke visualisiert die Performance des erstellten Modells.
        .col-sm-6.offset-lg-4.col-lg-4
          canvas#chart(height="220px")
    #model-container.container.mt-4
      include pslresult.pug
    #spinner.position-fixed.top-50.start-50.spinner-border.htmx-indicator
      
    

    style.
      .ghost :not(.label){
        display: none !important;
      }
      li:hover .add, li:hover .remove{
        display: inline-block !important;
      }

    script(type="module" src="{% static 'js/initialize.js' %}")

    script.
      function update_table(event, values){
          values["feature"] = event.target.closest("li").dataset.feature;
          htmx.ajax("POST", "update-table", {target: "#model-container", values: values });
      }
      const add = (event) => update_table(event, {type: "feature", fromList: "unused", toList: "used"});
      const remove = (event) => update_table(event, {type: "feature", fromList: "used", toList: "unused"});
      const score = (event, diff) => update_table(event, {type: "score", diff: diff});
      
      const chart = new Chart(document.querySelector("#chart").getContext('2d'), {
        type: 'line',
        data: {
          labels: labels,
          datasets: [{
            label: 'RoC AuC pro Stufe',
            borderColor: 'rgb(75, 192, 192)',
            data: data,
          }],
        },
        options: {
          scales: {
            y: {
              beginAtZero: false,
              min: 0.5,   // Set the minimum value of the y-axis
              max: 1.02,   // Set the maximum value of the y-axis
              title: {
                display: true,
                text: 'Model Performance'  // Y-axis label
              }
            },
            x: {
              title: {
                display: true,
                text: 'Anzahl der Merkmale'  // X-axis label
              }
            }
          },
          animation: {
            duration: 0
          },
          responsive: true,
          maintainAspectRatio: false,
        }
      });

      if (experiment_params.incremental_model == 0){
        document.getElementById("chart").style.display = "none";
      }

      htmx.on('htmx:configRequest', e => e.detail.headers['X-CSRFToken'] = "!{csrf_token}");

      htmx.on("htmx:beforeRequest", evt => {
        if (evt.detail.target.id == "model-container"){
          document.querySelectorAll("#model-container .loading")
            .forEach(e => {
              htmx.addClass(e, "opacity-25");
              Object.assign(e.style, {
                pointerEvents: "none",
                userSelect: "none"
              });
            });
        }
      });
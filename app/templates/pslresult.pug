.row.mt-4.loading
  if experiment_params.incremental_model == 1
    .col-2.d-flex.justify-content-end
      #reset.btn.btn-outline-secondary(hx-post="reset" hx-target="#model-container" hx-indicator="#spinner")
        span.mdi.mdi-page-first Zur체cksetzen
  if experiment_params.incremental_model == 0
    .col-3.d-flex.justify-content-end
      #reset.btn.btn-outline-secondary(hx-post="reset" hx-target="#model-container" hx-indicator="#spinner")
        span.mdi.mdi-page-first Zur체cksetzen
  .col-4.justify-content-center
    if experiment_params.automatically_add == 1
      .btn-group(role="group")
        #add.btn.btn-outline-secondary.rounded-start-2(hx-post="add" hx-target="#model-container" hx-indicator="#spinner" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Add one optimal feature") Automatisch hinzuf체gen
          span.mdi.mdi-chevron-right
      //#fill.btn.btn-outline-secondary(hx-post="fill" hx-target="#model-container" hx-indicator="#spinner") Fill
        span.mdi.mdi-page-last
  //.col-6.d-flex.justify-content-end
    .btn-group(role="group")#history-button
      include historybutton.pug

  if experiment_params.incremental_model == 0
    .col-1
    .col-4.d-flex.justify-content-end#accuracy-div Modelqualit채t:
      span#accuracy.fw-bold

#feature-container.row.mt-3.loading(hx-target="#model-container")
  .col-3
    ul#unused.list-group.text-center
      .fw-bold.list-group-item.p-2 Unbenutzt
      each fidx, f in var.items
        li.list-group-item.list-group-item-action.p-2.text-truncate.draghandle.hand-cursor(data-feature=fidx data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title=f hx-vals='js:{"feature": event.target.closest("li").dataset.feature}')= f
          if rows|length < experiment_params.max_model_size
            span.mdi.mdi-plus.btn.btn-sm.p-0.position-absolute.end-0.add.d-none(hx-post="update-table" hx-vals='{"type": "feature", "fromList": "unused", "toList": "used"}')
  if experiment_params.incremental_model == 1
    .col-9
      ul#used.list-group.text-center
        .fw-bold.list-group-item.d-flex.p-0
          .col-4.p-2.text-truncate Merkmal
          .col-1.border-start.p-2.text-truncate Score
          for head in headings
            .col.border-start.p-2.text-truncate= head
        each row in rows
          li.list-group-item.list-group-item-action.d-flex.p-0(data-feature=row["fidx"] data-threshold=row["thresh"] hx-vals='js:{"feature": event.target.closest("li").dataset.feature}')
            // we could also add additional data into the datafield. such as the threshold
            span.badge.rounded-pill.text-bg-light.position-absolute.top-50.start-0.translate-middle= row.i
            .label.col.col-4.p-2.text-truncate.draghandle.hand-cursor.position-relative(data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title=row["fname"]+row["thresh"])= row.fname
              if row.thresh != ""
                = row.thresh
              span.mdi.mdi-close.btn.btn-sm.p-0.position-absolute.end-0.remove.d-none(hx-post="update-table" hx-vals='{"type": "feature", "fromList": "used", "toList": "unused"}' hx-indicator="#spinner")
            .col.col-1.border-start.p-2.text-truncate.d-flex.justify-content-around.align-items-center(hx-vals='{"type":"score"}')
              span.mdi.mdi-minus.btn.btn-sm.p-0(hx-post="update-table" hx-vals='{"diff":-1}')
              = row.score
              span.mdi.mdi-plus.btn.btn-sm.p-0(hx-post="update-table" hx-vals='{"diff":1}')
            each val in row.probas
              .col.border-start.pt-2.pb-2.text-truncate.proba-cell= val
  if experiment_params.incremental_model == 0
    .col-4
      ul#used.list-group.text-center
        .fw-bold.list-group-item.d-flex.p-0
          .col-9.p-2.text-truncate Merkmal
          .col-3.border-start.p-2.text-truncate Score
          //- for head in headings
          //-   .col.border-start.p-2.text-truncate= head
        each row in rows
          li.list-group-item.list-group-item-action.d-flex.p-0(data-feature=row["fidx"] data-threshold=row["thresh"] hx-vals='js:{"feature": event.target.closest("li").dataset.feature}')
            // we could also add additional data into the datafield. such as the threshold
            //- span.badge.rounded-pill.text-bg-light.position-absolute.top-50.start-0.translate-middle= row.i
            .label.col.col-9.p-2.text-truncate.draghandle.hand-cursor.position-relative(data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title=row["fname"]+row["thresh"])= row.fname
              if row.thresh != ""
                = row.thresh
              span.mdi.mdi-close.btn.btn-sm.p-0.position-absolute.end-0.remove.d-none(hx-post="update-table" hx-vals='{"type": "feature", "fromList": "used", "toList": "unused"}' hx-indicator="#spinner")
            .col.col-3.border-start.p-2.text-truncate.d-flex.justify-content-around.align-items-center(hx-vals='{"type":"score"}')
              span.mdi.mdi-minus.btn.btn-sm.p-0(hx-post="update-table" hx-vals='{"diff":-1}')
              = row.score
              span.mdi.mdi-plus.btn.btn-sm.p-0(hx-post="update-table" hx-vals='{"diff":1}')
            each val in row.probas
              .col.border-start.pt-2.pb-2.text-truncate.proba-cell.d-none= val
    .col-5#laststage
      ul.text-center.list-group
        .fw-bold.list-group-item Total Score
        .fw-bold.d-flex.p-0.list-group-item
          for head in headings
            .col.p-2.text-truncate.border-start.total-score-heading= head
        #lastprobas.d-flex.list-group-item.p-0

if experiment_params.incremental_model == 0
  .row.text-center
    pre.mermaid
      != merm_chart|safe

script.
  labels = !{labels};
  data = !{metric};
  experiment_params = !{experiment_params|safe};

  if (experiment_params.incremental_model == 0) {
    lastStagePerformance = data[data.length - 1]
    document.querySelector("#accuracy").innerHTML = "&nbsp;" + ((lastStagePerformance-.5) * 40).toFixed(0) + " von 20";

    document.querySelectorAll("#used li:last-child .proba-cell").forEach(cell => {
      cell.classList.remove("d-none");
      document.querySelector("#lastprobas").appendChild(cell);
    });

    if (document.querySelectorAll("#lastprobas .proba-cell").length == 0) {
      document.querySelector("#laststage").style.display = "none";
      document.querySelector("#accuracy-div").classList.remove("d-flex");
      document.querySelector("#accuracy-div").classList.add("d-none");
    } else {
      document.querySelector("#laststage").style.display = "block";
      document.querySelector("#accuracy-div").classList.remove("d-none");
      document.querySelector("#accuracy-div").classList.add("d-flex");

      document.querySelector(".total-score-heading").classList.remove("border-start");
      document.querySelector(".proba-cell").classList.remove("border-start");
    }
  }

style.
  .hand-cursor{
    cursor: pointer;
  }
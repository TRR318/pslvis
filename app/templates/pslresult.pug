.row.mt-4.loading
  .col-2.d-flex.justify-content-end
    #reset.btn.btn-outline-secondary(hx-post="reset" hx-target="#model-container" hx-indicator="#spinner")
      span.mdi.mdi-page-first Reset
  .col-4.justify-content-center
    .btn-group(role="group")
      #add.btn.btn-outline-secondary.rounded-start-2(hx-post="add" hx-target="#model-container" hx-indicator="#spinner" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title="Add one optimal feature") Add
        span.mdi.mdi-chevron-right
      #fill.btn.btn-outline-secondary(hx-post="fill" hx-target="#model-container" hx-indicator="#spinner") Fill
        span.mdi.mdi-page-last
  .col-6.d-flex.justify-content-end
    form.px-1.d-flex.justify-content-end(hx-post="save" hx-trigger="submit" hx-target="#history-button" hx-target-4*="#aa" hx-indicator="#spinner")
        input#name.form-control.w-50(type="text" name="name" placeholder="Enter model name" required)
        button.mx-1.btn.btn-primary(type="submit") Save Model
    .btn-group(role="group")#history-button
      include historybutton.pug

#feature-container.row.mt-3.loading(hx-target="#model-container")
  .col-2
    ul#unused.list-group.text-center
      .fw-bold.list-group-item.p-2 Unused
      each fidx, f in var.items
        li.list-group-item.list-group-item-action.p-2.text-truncate.draghandle.hand-cursor(data-feature=fidx data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title=f hx-vals='js:{"feature": event.target.closest("li").dataset.feature}')= f
          span.mdi.mdi-plus.btn.btn-sm.p-0.position-absolute.end-0.add.d-none(hx-post="update-table" hx-vals='{"type": "feature", "fromList": "unused", "toList": "used"}')
  .col-10
    ul#used.list-group.text-center
      .fw-bold.list-group-item.d-flex.p-0
        .col-3.p-2.text-truncate Features
        .col-1.border-start.p-2.text-truncate Scores
        for head in headings
          .col.border-start.p-2.text-truncate= head
      each row in rows
        li.list-group-item.list-group-item-action.d-flex.p-0(data-feature=row["fidx"] data-threshold=row["thresh"] hx-vals='js:{"feature": event.target.closest("li").dataset.feature}')
          // we could also add additional data into the datafield. such as the threshold
          .label.col.col-3.p-2.text-truncate.draghandle.hand-cursor.position-relative(data-bs-toggle="tooltip" data-bs-placement="top" data-bs-title=row["fname"]+row["thresh"])= row.fname
            if row.thresh != ""
              = row.thresh
            span.mdi.mdi-close.btn.btn-sm.p-0.position-absolute.end-0.remove.d-none(hx-post="update-table" hx-vals='{"type": "feature", "fromList": "used", "toList": "unused"}')
          .col.col-1.border-start.p-2.text-truncate.d-flex.justify-content-around.align-items-center(hx-vals='{"type":"score"}')
            span.mdi.mdi-minus.btn.btn-sm.p-0(hx-post="update-table" hx-vals='{"diff":-1}')
            = row.score
            span.mdi.mdi-plus.btn.btn-sm.p-0(hx-post="update-table" hx-vals='{"diff":1}')
          each val in row.probas
            .col.border-start.pt-2.pb-2.text-truncate.proba-cell= val

script.
  labels = !{labels};
  data = !{metric};


style.
  .hand-cursor{
    cursor: pointer;
  }
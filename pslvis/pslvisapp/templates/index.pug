doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    title DataFrame Display
    // Include Bootstrap CSS from CDN
    link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet')
    script(src="https://unpkg.com/htmx.org@1.8.1/dist/htmx.js")
    script(src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.2/Sortable.min.js")
  body
    .container.mt-5
      h1 DataFrame from Pandas
      include table.pug
     
    script.
      function handle_drag() {
        document.querySelectorAll("#feature-container ul")
          .forEach(ul => {
            new Sortable(ul, {
              animation:150,
              group: "features",
              onEnd: function(evt) {
                console.log(evt)
                const fromIndex = evt.oldIndex;
                const toIndex = evt.newIndex;

                if (true  || fromIndex !== toIndex) {
                  // Trigger htmx to send information to the server
                  htmx.ajax("GET", "/update-table", {
                    target: "#feature-container",
                    swap: "outerHTML",
                    values: {
                      from: fromIndex,
                      to: toIndex,
                      feature: evt.item.value,
                      fromList: evt.from.id,
                      toList: evt.to.id,
                    }
                  });
                }
              }
            });
          })
      }

      document.addEventListener('DOMContentLoaded', handle_drag);
      document.body.addEventListener('htmx:afterSwap', handle_drag);
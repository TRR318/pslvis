doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    title DataFrame Display
    // Include Bootstrap CSS from CDN
    link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet')
    script(src="https://unpkg.com/htmx.org@1.8.1/dist/htmx.js")
  body
    .container.mt-5
      h1 DataFrame from Pandas
      // Display the DataFrame HTML

      .row.mt-4
        .col-0.col-md-1.col-xl-2
        .col
          {{ loaded_data|safe }}
        .col-0.col-md-1.col-xl-2

    script.
      function table_handle() {
        const table = document.querySelector('#data-table');
        
        document.querySelectorAll('#data-table tr')
          .forEach(row => row.draggable = true);

        let draggedRowIndex = null;
        let dragedRow = null;
        table.addEventListener('dragstart', (e) => {
          draggedRowIndex = Array.from(table.rows).indexOf(e.target.closest('tr'));
          draggedRow= e.target;
        });

        table.addEventListener('dragover', (e) => {
          e.preventDefault(); // Necessary to allow 
          const activeRow = e.target.closest('tr');
          if (activeRow) {
            const bounding = activeRow.getBoundingClientRect();
            const offset = e.clientY - bounding.top;  // Get the vertical offset within the row
            if (offset > bounding.height / 2) {  // If the offset is in the lower half of the row
              activeRow.after(draggedRow);
            } else {
              activeRow.before(draggedRow);
            }
          }
        });

        table.addEventListener('drop', (e) => {
          e.preventDefault();
          const targetRow = e.target.closest('tr');
          const targetRowIndex = Array.from(table.rows).indexOf(targetRow);

          if (draggedRowIndex !== targetRowIndex) {
            if (draggedRowIndex < targetRowIndex) {
              targetRow.after(table.rows[draggedRowIndex]);
            } else {
              targetRow.before(table.rows[draggedRowIndex]);
            }

            // Trigger htmx to send information to the server
            htmx.ajax("GET", "/update-table", {target:"#data-table", swap:"outerHTML", values: {from: draggedRowIndex, to: targetRowIndex}});
          }
        });


        table.addEventListener('dragend', (e) => {
          draggedRowIndex = null;
          draggedRow = null;
        }); 
      }

      document.addEventListener('DOMContentLoaded', table_handle);
      document.body.addEventListener('htmx:afterSwap', table_handle);
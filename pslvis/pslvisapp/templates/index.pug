doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    title DataFrame Display
    // Include Bootstrap CSS from CDN
    link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet')
    link(rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200")
    script(src="https://cdn.jsdelivr.net/npm/htmx.org@1.9.11/dist/htmx.min.js")
    script(src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.2/Sortable.min.js")
    script(src="https://cdn.jsdelivr.net/npm/chart.js@4.4.2/dist/chart.umd.min.js")
  body
    include pslresult.pug

    script.
      function initialize() {
        document.querySelectorAll("#feature-container ul")
          .forEach(ul => {
            new Sortable(ul, {
              animation:150,
              group: "features",
              ghostClass: "ghost",	
              handle: ".draghandle",
              onEnd: function(evt) {
                if (evt.oldIndex !== evt.newIndex || evt.from.id !== evt.to.id) {
                  // Trigger htmx to send information to the server
                  evt.item.classList.add("ghost")
                  htmx.ajax("GET", "/update-table", {
                    target: "#feature-container",
                    swap: "outerHTML",
                    values: {
                      type: "feature",
                      from: evt.oldIndex,
                      to: evt.newIndex,
                      feature: evt.item.value,
                      fromList: evt.from.id,
                      toList: evt.to.id,
                    }
                  });
                }
              }
            });
          })
      }

      document.addEventListener('DOMContentLoaded', initialize);
      document.body.addEventListener('htmx:afterSwap', initialize);
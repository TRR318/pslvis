doctype html
html(lang='en')
  head
    meta(charset='UTF-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    title DataFrame Display
    // Include Bootstrap CSS from CDN
    link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css' rel='stylesheet')
    script(src="https://unpkg.com/htmx.org@1.8.1/dist/htmx.js")
    script(src="https://cdn.jsdelivr.net/npm/sortablejs@1.15.2/Sortable.min.js")
  body
    .container.mt-5
      h1 DataFrame from Pandas
      // Display the DataFrame HTML

      .row.mt-4
        .col-0.col-md-1.col-xl-2
        .col
          include table.pug
        .col-0.col-md-1.col-xl-2
     
    script.
      function table_handle() {
        new Sortable(document.querySelector('#data-table'), {
          animation:150,
          onEnd: function(evt) {
            //console.log(evt)
            const fromIndex = evt.oldIndex;
            const toIndex = evt.newIndex;

            if (true  || fromIndex !== toIndex) {
              // Trigger htmx to send information to the server
              htmx.ajax("GET", "/update-table", {
                target: "#data-table",
                swap: "outerHTML",
                values: {
                  from: fromIndex,
                  to: toIndex,
                  item: evt.item.innerText,
                  fromHTML: evt.from.id,
                  toHTML: evt.target.id,
                }
              });
            }
          }
        });
      }

      document.addEventListener('DOMContentLoaded', table_handle);
      document.body.addEventListener('htmx:afterSwap', table_handle);